language: cpp
compiler:
  - gcc
 
#For Ubuntu Trusty (14.04 LTS)
dist: trusty

env:
  matrix:
    - xGSL=1 xMPI=0 xPYTHON=1
    - xGSL=0 xMPI=1 xPYTHON=1
    - xGSL=1 xMPI=1 xPYTHON=1
    - xGSL=0 xMPI=1 xPYTHON=0
    - xGSL=1 xMPI=1 xPYTHON=0
    - xGSL=1 xMPI=0 xPYTHON=0
    - xGSL=0 xMPI=0 xPYTHON=1
    - xGSL=0 xMPI=0 xPYTHON=0
matrix:
 # do notify immediately about it when a job of a build fails.
  fast_finish: true
branches:
 only:
  - master
cache:
  apt: true 
  ccache: true
  pip: true
#virtualenv:
 # system_site_packages: true
#addons:
#  artifacts:
 #  debug: true

before_install:
  - echo $LANG
  - echo $LC_ALL

  #- if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get update && sudo apt-get install -y llvm-3.4 llvm-3.4-dev; fi
  - sudo rm -rf /var/lib/apt/lists/*
  - ls /etc/apt/sources.list.d/
 # - sudo rm /etc/apt/sources.list.d/docker-source.list
  # get repository for clang-3.6 stuff (including clang-format-3.6)
  - sudo sh -c 'echo -n "deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.6 main" >> /etc/apt/sources.list'
  # add key from ^ repository
  - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -

  # update repository status (-qq is more quiet)
  - sudo apt-get update -qq
  #Upgrade pip
  #- pip install --upgrade pip
  - wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py
  - sudo python get-pip.py
  
  - sudo apt-get install -y  coreutils gawk mawk original-awk
  # some basic package build tools:
  - sudo apt-get install -y devscripts build-essential
  # remove any obsolete libraries
  - sudo apt-get autoremove

  # For NEST ConnPlotter tutorial
  - sudo apt-get install -y texlive-latex-extra
  
  #Clang
  - sudo apt-get install -y clang indent
  
  # Required by Topographica
  #- sudo apt-get install xorg-x11-server-Xvfb pylint pyflakes
  
  # Required by NEST, PyNN and Topographica
  - sudo apt-get install -y python-debian python-numpy python-scipy python-virtualenv python-matplotlib python-tk
  
  # Required by Sumatra and PyNN
  - sudo apt-get install -y python-coverage python-nose python-setuptools
  - sudo apt-get install -y python-mpi4py openmpi-bin openmpi-doc libopenmpi-dev
  
  #python 3
  - sudo apt-get install -y python3 ipython3 python3-all-dev python3-dev python3-numpy python3-scipy python3-nose
  
  #- sudo pip install cython==0.21.1
  - pip install --user cython==0.21.1
  - sudo pip install -U setuptools
  
  # Needed for documentation, e.g. NEST examples
  - sudo apt-get install -y texlive texlive-latex-base texlive-latex3 ghostscript
  
  #Build dependencies for NEST
  - sudo apt-get install -y autoconf automake libtool libltdl-dev
  - sudo apt-get install -y libgsl0-dev  libghc-readline-dev gsl-bin libgsl0-dbg libgsl0ldbl
  
  #Build dependencies for Sumatra
  - sudo apt-get install -y python-django python-django-tagging python-httplib2 python-simplejson python-svn git-svn
  
  #Build dependencies for PyNN
  - sudo apt-get install -y python-cheetah python-jinja2 python-mock
  
  #Build dependencies for Topographica
  - sudo apt-get install -y python-tk python-gmpy python-imaging python-imaging-tk

  - sudo apt-get install -y cvs e2fsprogs gettext libpackagekit-glib2-dev groff libssh2-1-dev python-libssh2 slang-gsl libncurses5-dev check

  # for checking coding style (clang-format-3.6 depends on libllvm3.6)
  - sudo apt-get install clang-format-3.6

  #cppcheck
  - sudo apt-get install cppcheck
  #vera++
  - sudo apt-get install vera++

install: 
  - cppcheck --version
  - cython --version
  - python --version
before_script:
  - chmod +x build.sh 

script: ./build.sh  

after_failure:
  - cd $TRAVIS_BUILD_DIR/build
  - |
    for i in $(find reports -type f); do
      echo "###########################"
      echo "File: $i"
      cat $i
    done
  
