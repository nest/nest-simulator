/*
 *  issue-1974.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


/** @BeginDocumentation
    Name: testsuite::issue-1974 - Ensure that from MUSIC proxies are created correctly
    Synopsis: (issue-1974) run -> - 

    Description:
    issue-1974.sli checks that neurons are connected exactly once to MUSIC proxies.
    
    Author: Hans Ekkehard Plesser
*/

(unittest) run
/unittest using

skip_if_without_music

/*
 * Test logic:
 * For each of the two parrot neurons, exactly one connection from/to the
 * in/out MUSIC proxy must be created, specifically to the proxy on the
 * rank on which the parrot neuron exists. Therefore, the pooled connections
 * across ranks must be identical independent of number of ranks.
 */
[1 2 4]
{
  /nrns /parrot_neuron 2 Create def
  /in /music_event_in_proxy << /port_name (in_spikes) >> Create def
  /out /music_event_out_proxy << /port_name (out_spikes) >> Create def

  in nrns Connect
  nrns out Connect

  << >> GetConnections GetStatus { [[ /source /target ]] get } Map
} distributed_process_invariant_collect_assert_or_die
