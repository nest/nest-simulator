/*
 *  test_free_mask_circ_anchor_10.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


% Circular mask, radius 0.25
%
% Setup:
%     - 5x5 -> 5x5, extent 1.25x1.25
%     - nodes "freely placed" at regular grid locations
% expectation:
%   each node is connected to
%     - the node in the same location in the target layer
%     - the two nodes to the right and left of that location
%     - the two nodes above and below that location
%     - should give identical results to reg_mask_circ_anchor_10.sli
%
%   like free_mask_circ_anchor_00, but with periodic boundary conditions
%
%    Sources                      Targets
%     2  7 12 17 22    	          28 33 38 43 48
%     3  8 13 18 23		  29 34	39 44 49
%     4	 9 14 19 24		  30 35	40 45 50
%     5	10 15 20 25		  31 36	41 46 51
%     6	11 16 21 26		  32 37	42 47 52
%
%    Exemplary connections
%           
%              32                47                52
%      2 -> 48 28 33    17 -> 38 43 48    22 -> 43 48 28
%	       29                44                49
%
%              31                46                51
%      6 -> 52 32 37    21 -> 42 47 52    26 -> 47 52 32
%              28                43                48

% loop y-coords backwards so that we get same gid-pos mapping as on grid
[-0.5 0.5 0.25] Range 
{ /x Set [0.5 -0.5 -0.25] Range { x exch 2 arraystore } Map } Map 1 Flatten
/pos Set

/layer << /positions pos
          /extent [1.25 1.25]
          /center [0. 0.]
          /edge_wrap true
          /elements /iaf_psc_alpha
        >> def

/src_layer layer def
/tgt_layer layer def

/conns << /connection_type (divergent)
          /mask << /circular << /radius 0.25 >> /anchor [ 0.0 0.0 ] >>
       >> def

/source_layer_ref
[
 [2 -0.5 0.5]
 [3 -0.5 0.25]
 [4 -0.5 0]
 [5 -0.5 -0.25]
 [6 -0.5 -0.5]
 [7 -0.25 0.5]
 [8 -0.25 0.25]
 [9 -0.25 0]
 [10 -0.25 -0.25]
 [11 -0.25 -0.5]
 [12 0 0.5]
 [13 0 0.25]
 [14 0 0]
 [15 0 -0.25]
 [16 0 -0.5]
 [17 0.25 0.5]
 [18 0.25 0.25]
 [19 0.25 0]
 [20 0.25 -0.25]
 [21 0.25 -0.5]
 [22 0.5 0.5]
 [23 0.5 0.25]
 [24 0.5 0]
 [25 0.5 -0.25]
 [26 0.5 -0.5]
]
def

/target_layer_ref
[
 [28 -0.5 0.5]
 [29 -0.5 0.25]
 [30 -0.5 0]
 [31 -0.5 -0.25]
 [32 -0.5 -0.5]
 [33 -0.25 0.5]
 [34 -0.25 0.25]
 [35 -0.25 0]
 [36 -0.25 -0.25]
 [37 -0.25 -0.5]
 [38 0 0.5]
 [39 0 0.25]
 [40 0 0]
 [41 0 -0.25]
 [42 0 -0.5]
 [43 0.25 0.5]
 [44 0.25 0.25]
 [45 0.25 0]
 [46 0.25 -0.25]
 [47 0.25 -0.5]
 [48 0.5 0.5]
 [49 0.5 0.25]
 [50 0.5 0]
 [51 0.5 -0.25]
 [52 0.5 -0.5]
]
def

/conn_ref
[
 [2 28 1 1 0 0]
 [2 29 1 1 0 -0.25]
 [2 32 1 1 0 0.25]
 [2 33 1 1 0.25 0]
 [2 48 1 1 -0.25 0]
 [3 28 1 1 0 0.25]
 [3 29 1 1 0 0]
 [3 30 1 1 0 -0.25]
 [3 34 1 1 0.25 0]
 [3 49 1 1 -0.25 0]
 [4 29 1 1 0 0.25]
 [4 30 1 1 0 0]
 [4 31 1 1 0 -0.25]
 [4 35 1 1 0.25 0]
 [4 50 1 1 -0.25 0]
 [5 30 1 1 0 0.25]
 [5 31 1 1 0 0]
 [5 32 1 1 0 -0.25]
 [5 36 1 1 0.25 0]
 [5 51 1 1 -0.25 0]
 [6 28 1 1 0 -0.25]
 [6 31 1 1 0 0.25]
 [6 32 1 1 0 0]
 [6 37 1 1 0.25 0]
 [6 52 1 1 -0.25 0]
 [7 28 1 1 -0.25 0]
 [7 33 1 1 0 0]
 [7 34 1 1 0 -0.25]
 [7 37 1 1 0 0.25]
 [7 38 1 1 0.25 0]
 [8 29 1 1 -0.25 0]
 [8 33 1 1 0 0.25]
 [8 34 1 1 0 0]
 [8 35 1 1 0 -0.25]
 [8 39 1 1 0.25 0]
 [9 30 1 1 -0.25 0]
 [9 34 1 1 0 0.25]
 [9 35 1 1 0 0]
 [9 36 1 1 0 -0.25]
 [9 40 1 1 0.25 0]
 [10 31 1 1 -0.25 0]
 [10 35 1 1 0 0.25]
 [10 36 1 1 0 0]
 [10 37 1 1 0 -0.25]
 [10 41 1 1 0.25 0]
 [11 32 1 1 -0.25 0]
 [11 33 1 1 0 -0.25]
 [11 36 1 1 0 0.25]
 [11 37 1 1 0 0]
 [11 42 1 1 0.25 0]
 [12 33 1 1 -0.25 0]
 [12 38 1 1 0 0]
 [12 39 1 1 0 -0.25]
 [12 42 1 1 0 0.25]
 [12 43 1 1 0.25 0]
 [13 34 1 1 -0.25 0]
 [13 38 1 1 0 0.25]
 [13 39 1 1 0 0]
 [13 40 1 1 0 -0.25]
 [13 44 1 1 0.25 0]
 [14 35 1 1 -0.25 0]
 [14 39 1 1 0 0.25]
 [14 40 1 1 0 0]
 [14 41 1 1 0 -0.25]
 [14 45 1 1 0.25 0]
 [15 36 1 1 -0.25 0]
 [15 40 1 1 0 0.25]
 [15 41 1 1 0 0]
 [15 42 1 1 0 -0.25]
 [15 46 1 1 0.25 0]
 [16 37 1 1 -0.25 0]
 [16 38 1 1 0 -0.25]
 [16 41 1 1 0 0.25]
 [16 42 1 1 0 0]
 [16 47 1 1 0.25 0]
 [17 38 1 1 -0.25 0]
 [17 43 1 1 0 0]
 [17 44 1 1 0 -0.25]
 [17 47 1 1 0 0.25]
 [17 48 1 1 0.25 0]
 [18 39 1 1 -0.25 0]
 [18 43 1 1 0 0.25]
 [18 44 1 1 0 0]
 [18 45 1 1 0 -0.25]
 [18 49 1 1 0.25 0]
 [19 40 1 1 -0.25 0]
 [19 44 1 1 0 0.25]
 [19 45 1 1 0 0]
 [19 46 1 1 0 -0.25]
 [19 50 1 1 0.25 0]
 [20 41 1 1 -0.25 0]
 [20 45 1 1 0 0.25]
 [20 46 1 1 0 0]
 [20 47 1 1 0 -0.25]
 [20 51 1 1 0.25 0]
 [21 42 1 1 -0.25 0]
 [21 43 1 1 0 -0.25]
 [21 46 1 1 0 0.25]
 [21 47 1 1 0 0]
 [21 52 1 1 0.25 0]
 [22 28 1 1 0.25 0]
 [22 43 1 1 -0.25 0]
 [22 48 1 1 0 0]
 [22 49 1 1 0 -0.25]
 [22 52 1 1 0 0.25]
 [23 29 1 1 0.25 0]
 [23 44 1 1 -0.25 0]
 [23 48 1 1 0 0.25]
 [23 49 1 1 0 0]
 [23 50 1 1 0 -0.25]
 [24 30 1 1 0.25 0]
 [24 45 1 1 -0.25 0]
 [24 49 1 1 0 0.25]
 [24 50 1 1 0 0]
 [24 51 1 1 0 -0.25]
 [25 31 1 1 0.25 0]
 [25 46 1 1 -0.25 0]
 [25 50 1 1 0 0.25]
 [25 51 1 1 0 0]
 [25 52 1 1 0 -0.25]
 [26 32 1 1 0.25 0]
 [26 47 1 1 -0.25 0]
 [26 48 1 1 0 -0.25]
 [26 51 1 1 0 0.25]
 [26 52 1 1 0 0]
]
def

(unittest) run
/unittest using

ResetKernel

0 << /sort_connections_by_source false >> SetStatus

/sources src_layer CreateLayer def
/targets tgt_layer CreateLayer def

sources targets conns ConnectLayers

/sources_oss osstream ; def
/targets_oss osstream ; def
/sources_conns_oss osstream ; def

sources_oss sources DumpLayerNodes ;
targets_oss targets DumpLayerNodes ;
sources_conns_oss sources /static_synapse DumpLayerConnections ;

/source_layer_result sources_oss str cst 3 Partition def
/target_layer_result targets_oss str cst 3 Partition def
/conn_result sources_conns_oss str cst 6 Partition def

{
  source_layer_ref source_layer_result eq
} assert_or_die

{
  target_layer_ref target_layer_result eq
} assert_or_die

{
  conn_ref conn_result eq
} assert_or_die

