

.. _sphx_glr_auto_examples_connex.py:



Create two 30x30 layers of iaf_psc_alpha neurons (circular mask)
-----------------------------------------------------------------

Connect with circular mask, flat probability,
visualize.

BCCN Tutorial @ CNS*09
Hans Ekkehard Plesser, UMB



.. code-block:: python


    import nest
    import nest.topology as topo
    import pylab

    pylab.ion()


    nest.ResetKernel()

    # create two test layers
    a = topo.CreateLayer({'columns': 30, 'rows': 30, 'extent': [3.0, 3.0],
                          'elements': 'iaf_psc_alpha'})
    b = topo.CreateLayer({'columns': 30, 'rows': 30, 'extent': [3.0, 3.0],
                          'elements': 'iaf_psc_alpha'})

    conndict = {'connection_type': 'divergent',
                'mask': {'circular': {'radius': 0.5}},
                'kernel': 0.5,
                'weights': {'uniform': {'min': 0.5, 'max': 2.0}},
                'delays': 1.0}
    topo.ConnectLayers(a, b, conndict)

    # plot targets of neurons in different grid locations

    # first, clear existing figure, get current figure
    pylab.clf()
    fig = pylab.gcf()

    # plot targets of two source neurons into same figure, with mask
    for src_pos in [[15, 15], [0, 0]]:
        # obtain node id for center
        src = topo.GetElement(a, src_pos)
        topo.PlotTargets(src, b, mask=conndict['mask'], fig=fig)

    # beautify
    pylab.axes().set_xticks(pylab.arange(-1.5, 1.55, 0.5))
    pylab.axes().set_yticks(pylab.arange(-1.5, 1.55, 0.5))
    pylab.grid(True)
    pylab.axis([-2.0, 2.0, -2.0, 2.0])
    pylab.axes().set_aspect('equal', 'box')
    pylab.title('Connection targets')

    # pylab.savefig('connex.pdf')

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: connex.py <connex.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: connex.ipynb <connex.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
