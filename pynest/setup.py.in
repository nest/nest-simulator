# -*- coding: utf-8 -*-
#
# setup.py
#
# This file is part of NEST.
#
# Copyright (C) 2004 The NEST Initiative
#
# NEST is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# NEST is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NEST.  If not, see <http://www.gnu.org/licenses/>.

from setuptools import setup, find_packages, Extension
from setuptools.command.build_ext import build_ext
import os

build_wheel = os.getenv("NEST_CMAKE_BUILDWHEEL")

class cmake_extension(Extension):
    def __init__(self, name):
        Extension.__init__(self, name, sources=[])


class cmake_build(build_ext):
    def run(self):
        import subprocess, sysconfig

        # The path where CMake will be configured and NEST will be built.
        build_directory = os.path.abspath(self.build_temp)
        # The path where the package will be copied after building.
        lib_directory = os.path.abspath(self.build_lib)
        # The current working directory
        p = os.path.abspath(os.getcwd())

        if not os.path.exists(self.build_temp):
            os.makedirs(self.build_temp)

        config = sysconfig.get_paths()
        print("CONFIG", config)
        os.chdir("build")
        print('-'*20, 'Configure CMake')
        subprocess.run(
            'cmake .. -DCMAKE_INSTALL_LIBDIR=' + str(lib_directory)
            + ' -DCMAKE_INSTALL_PREFIX=' + str(build_directory)
            + ' -DPYTHON_INCLUDE_DIR=' + str(config["include"]),
            shell=True,
            check=True
        )
        print('-'*20, 'Build')
        subprocess.run('make install -j4', shell=True, check=True)
        os.chdir("..")


wheel_kwargs = {} if not build_wheel else dict(
    cmdclass={
        'build_ext': cmake_build
    },
    ext_modules=[cmake_extension('nest')],
    include_package_data=True,
    package_data={
      "": ["*.sli"]
    }
)

setup(
    name = 'nest-simulator',
    version = '3.1',
    description = 'Python bindings for NEST',
    author = 'The NEST Initiative',
    url = 'https://www.nest-simulator.org',
    license = 'GPLv2+',
    packages = find_packages(exclude=["examples"]),
    install_requires = ['numpy', 'scipy'],
    extras_require = {'test': ['junitparser', 'matplotlib', 'nose']},
    classifiers = [
        'Development Status :: 6 - Mature',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Intended Audience :: Science/Research',
        'Topic :: Scientific/Engineering',
        'Topic :: Scientific/Engineering :: Artificial Intelligence',
    ],
    python_requires = '>=3.8, <4',
    keywords = (",".join([
        'nest',
        'simulator',
        'neuroscience',
        'neural',
        'neuron',
        'network',
        'ai',
        'spike',
        'spiking'
    ])),
    project_urls = {
        'Homepage': 'https://www.nest-simulator.org/',
        'Bug Reports': 'https://github.com/nest/nest-simulator/issues',
        'Source': 'https://github.com/nest/nest-simulator',
        'Documentation': 'https://nest-simulator.readthedocs.io/'
    },
    **wheel_kwargs,
)
