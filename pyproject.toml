[build-system]
requires = ["scikit-build-core", "cython"]
build-backend = "scikit_build_core.build"

[project]
name = "nest-simulator"
version = "3.8.post0.dev9"
description = "NEST is a simulator for spiking neural network models that focuses on the dynamics, size and structure of neural systems rather than on the exact morphology of individual neurons."
readme = "README.md"
license.file = "LICENSE"
authors = [
  { name = "Steffen Graber", email = "s.graber@fz-juelich.de" },
]
maintainers = [
  { name = "Steffen Graber", email = "s.graber@fz-juelich.de" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Medical Science Apps.",
  "Typing :: Typed",
]
dependencies = [
  "pynest-api",
  "numpy",
  "pandas",
  "scipy",
  "matplotlib",
  "h5py",
]

[project.urls]
Homepage = "https://nest-simulator.org/"
Documentation = "https://nest-simulator.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/nest/nest-simulator/issues"
Changelog = "https://nest-simulator.readthedocs.io/en/stable/whats_new/index.html"

[tool.scikit-build]
sdist.include = ["./"]
sdist.exclude = [".github"]
build-dir = "build/{wheel_tag}"

[tool.scikit-build.cmake.define]
with-optimize ="-O2"
with-warning = "ON"
with-python = "ON"
with-boost = "ON"
with-gsl = "ON"
with-readline = "ON"
with-ltdl = "ON"
with-openmp = "ON"
with-userdoc ="OFF"
with-mpi = "OFF"
with-libneurosim = "OFF"
with-sionlib = "OFF"
with-music = "OFF"
with-hdf5 = "OFF"

[tool.cibuildwheel]
build-frontend = "default"
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
skip = "*-win* *-manylinux_i686" # Skip
test-skip = ""
free-threaded-support = false
archs = ["auto64"]
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = 2
before-all =  """
  NEST_SRC_DIR=${PWD}
    # Apply patches
  #git apply -v ./build_support/nest_vars.sh.in.patch
  #git apply -v ./build_support/slistartup.cc.patch
  # Install packages
  if [ $AUDITWHEEL_POLICY == "musllinux_1_2" ]
  then
    apk add git readline readline-dev libc6-compat gsl gsl-dev ncurses ncurses-dev wget bzip2 hdf5
  else
    yum install -y git glibc glibc-devel readline readline-devel gsl gsl-devel ncurses ncurses-devel wget bzip2 hdf5
  fi
  # Install boost
  wget https://archives.boost.io/release/1.73.0/source/boost_1_73_0.tar.bz2
  tar --bzip2 -xf boost_1_73_0.tar.bz2
  cd boost_1_73_0
  ./bootstrap.sh
  ./b2 install
  """
before-build = ""
repair-wheel-command = ""
test-command = ""
before-test = ""
test-requires = []
test-extras = []
container-engine = "docker"
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"
musllinux-x86_64-image = "musllinux_1_2"
musllinux-i686-image = "musllinux_1_2"
musllinux-aarch64-image = "musllinux_1_2"
musllinux-ppc64le-image = "musllinux_1_2"
musllinux-s390x-image = "musllinux_1_2"

[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]

[tool.cibuildwheel.pyodide]



[tool.pytest.ini_options]
markers = [
    "skipif_missing_gsl: skip test if NEST was built without GSL support",
    "skipif_missing_hdf5: skip test if NEST was built without HDF5 support",
    "skipif_missing_mpi: skip test if NEST was built without MPI support",
    "skipif_missing_threads: skip test if NEST was built without multithreading support",
    "simulation: the simulation class to use. Always pass a 2nd dummy argument"
]

[tool.isort]
profile = "black"
known_third_party = "nest"

[tool.black]
line-length = 120
