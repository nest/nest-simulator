name: Build wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-10.15]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install OpenMP (MacOS)
        if: runner.os == 'macOS'
        run: brew install libomp
      - name: Install OpenMP (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get install libomp-dev
      - name: Install Python wheel building prep requirements
        run: |
          python -m pip install wheel cython
      - name: Clone wheel building environment
        uses: actions/checkout@v2
        with:
          path: build_wheel_env
      - name: Prepare wheel building environment
        run: |
          source extras/wheelbuild/wheelbuild.sh GHA
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.3
        with:
          output-dir: ../wheelhouse
      - name: Build wheels
        run: |
          cd build_wheel_env
          python -m cibuildwheel --output-dir ../wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
