/*
 *  test_poisson_generator_ps.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

 /** @BeginDocumentation
Name: testsuite::test_poisson_generator_ps - Test parallel generation of Poissonian trains

Synopsis: nest_indirect test_poisson_generator_ps.sli -> -

Description:
   Creates a precise Poisson generator and sends spikes to spike recorder. Assert invariant
   results for fixed VP number. This is a partial response to #551. May be adapted
   to other generators.

Author:  December 2012, Plesser, based on test_poisson_generator.sli
*/

(unittest) run
/unittest using

skip_if_not_threaded

/total_vps 4 def

[1 2 4]
{
  % set resolution and total/local number of threads
  <<
  /resolution  0.1
  /total_num_virtual_procs total_vps
  >> SetKernelStatus

  /pg /poisson_generator_ps << /rate 1000. >> Create def
  /sr /spike_recorder Create def
  /pnet [ total_vps ] { ; /parrot_neuron Create } Table def

  pnet { pg exch Connect } forall
  pnet { sr Connect } forall

  10. Simulate

  % get events, replace vectors with SLI arrays
  /ev sr /events get def
  ev keys { /k Set ev dup k get cva k exch put } forall
  ev

} distributed_process_invariant_events_assert_or_die
