/*
 *  conngen-interface.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


/CGConnect trie

  % We create the type trie for the list variants using a loop
  [/arraytype /intvectortype /gidcollectiontype] {
    /gidlisttype Set

    % using empty parameter map and default synapse model
    [/connectiongeneratortype gidlisttype gidlisttype] {
      % stack: cg src trg
      cvgidcollection  % convert trg to gidcollection
      exch             % stack: cg trg src
      cvgidcollection  % convert src to gidcollection
      exch             % stack: cg src trg
      << >>            % stack: cg src trg params
      /Connect /syn_spec GetOption /model get % stack: cg src trg params synmodel
      CGConnect_cg_g_g_D_l
    } bind addtotrie

    % using given parameter map and default synapse model
    [/connectiongeneratortype gidlisttype gidlisttype /dictionarytype ] {
      % stack: cg src trg params
      3 2 roll         % stack: cg trg params src
      cvgidcollection  % convert src to gidcollection
      3 -2 roll        % stack: cg src trg params
      exch             % stack: cg src params trg
      cvgidcollection  % convert trg to gidcollection
      exch             % stack: cg src trg params
      /Connect /syn_spec GetOption /model get  % stack: cg src trg params synmodel
      CGConnect_cg_g_g_D_l
    } bind addtotrie

    % using empty parameter map and given synapse model
    [/connectiongeneratortype gidlisttype gidlisttype /literaltype ] {
      % stack: cg src trg synmodel
      3 2 roll         % stack: cg trg synmodel src
      cvgidcollection  % convert src to gidcollection
      3 -2 roll        % stack: cg src trg synmodel
      exch             % stack: cg src synmodel trg
      cvgidcollection  % convert trg to gidcollection
      exch             % stack: cg src trg synmodel
      << >>            % stack: cg src trg synmodel params
      exch             % stack: cg src trg params synmodel
      CGConnect_cg_g_g_D_l
    } bind addtotrie

    % using given parameter map and synapse model
    [/connectiongeneratortype gidlisttype gidlisttype /dictionarytype /literaltype ] {
      % stack: cg src trg params synmodel
      4 3 roll         % stack: cg trg params synmodel src
      cvgidcollection  % convert src to gidcollection
      4 -3 roll        % stack: cg src trg params synmodel
      3 2 roll         % stack: cg src params synmodel trg
      cvgidcollection  % convert trg to gidcollection
      3 -2 roll        % stack: cg src trg params synmodel
      CGConnect_cg_g_g_D_l
    } bind addtotrie

  } forall

def
